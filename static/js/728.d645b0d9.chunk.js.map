{"version":3,"file":"static/js/728.d645b0d9.chunk.js","mappings":"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","sources":["helpers/generateRandomNumber.js","webpack://ExpenseTracker/./src/components/BgImageWrapper/BgImageWrapper.module.css?8cad","components/BgImageWrapper/BgImageWrapper.jsx","components/PieChart/PieChart.jsx","webpack://ExpenseTracker/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://ExpenseTracker/./src/components/CategoriesModal/CategoriesModal.module.css?8937","components/CategoriesModal/CategoriesModal.jsx","webpack://ExpenseTracker/./src/components/TransactionForm/TransactionForm.module.css?2486","components/TransactionForm/TransactionForm.jsx","helpers/calculateCategories.js","helpers/currentMonth.js","helpers/fetchColors.js","webpack://ExpenseTracker/./src/components/TransactionsChart/TransactionsChart.module.css?4b74","components/TransactionsChart/TransactionsChart.jsx","webpack://ExpenseTracker/./src/components/TransactionsTotal/TransactionsTotal.module.css?148f","components/TransactionsTotal/TransactionsTotal.jsx","helpers/determinePath.js","helpers/retrieveCurrency.js","helpers/formatDate.js","helpers/formatTime.js","schemas/validationSchema.js"],"sourcesContent":["export const randomNumber = () => {\n    const randomNumber = Math.random() * (999 - 100) + 100;\n    return randomNumber.toFixed(3);\n  };\n  export const randomPercentage = () => Math.random() * (100 - 1) + 1;","// extracted by mini-css-extract-plugin\nexport default {\"containerImg\":\"BgImageWrapper_containerImg__2XDcO\",\"containerSvg\":\"BgImageWrapper_containerSvg__wChVN\",\"icon\":\"BgImageWrapper_icon__Y-tXs\",\"containerText\":\"BgImageWrapper_containerText__dogbM\",\"containerBalance\":\"BgImageWrapper_containerBalance__+jgEq\",\"text\":\"BgImageWrapper_text__fXYZe\",\"balance\":\"BgImageWrapper_balance__6EXKP\",\"containerPercent\":\"BgImageWrapper_containerPercent__ovNOW\",\"percent\":\"BgImageWrapper_percent__8LxOt\"};","import React, { useState, useEffect } from 'react';\nimport { Icon } from '../Icon/Icon';\nimport { randomNumber, randomPercentage } from '../../helpers/generateRandomNumber';\nimport s from './BgImageWrapper.module.css';\n\nexport const BgImageWrapper = () => {\n  const [randomSum, setRandomSum] = useState(0);\n  const [randomPercent, setRandomPercent] = useState(0);\n\n  useEffect(() => {\n    setRandomSum(randomNumber());\n    setRandomPercent(randomPercentage());\n  }, []);\n\n  return (\n    <div className={s.containerImg}>\n      <div className={s.containerText}>\n        <div className={s.containerSvg}>\n          <Icon name=\"arrow-up\" className={s.icon} size=\"18\" />\n        </div>\n        <div className={s.containerBalance}>\n          <p className={s.text}>Your balance</p>\n          <p className={s.balance}>{`$${randomSum}`}</p>\n        </div>\n        <div className={s.containerPercent}>\n          <p className={s.percent}>{`+${randomPercent.toFixed(2)}%`}</p>\n        </div>\n        <p className={s.dynamicText}></p>\n      </div>\n    </div>\n  );\n};\n","// components/PieChart/PieChart.jsx\nimport { PieChart, Pie, Cell } from 'recharts';\nimport { useMemo } from 'react';\n\nexport const Chart = ({ data }) => {\n  const chartData = useMemo(() => data, [data]);\n\n  return (\n    <PieChart width={292} height={150}>\n      <Pie\n        dataKey=\"value\"\n        data={chartData}\n        startAngle={180}\n        endAngle={0}\n        cy={140}\n        innerRadius={95}\n        outerRadius={145}\n        paddingAngle={-10}\n        cornerRadius={10}\n        fill=\"#15151b\"\n        stroke=\"none\"\n      >\n        {chartData.map((entry, index) => (\n          <Cell\n            style={{ outline: 'none' }}\n            key={`cell-${index}`}\n            fill={entry.color}\n          />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n\nexport default Chart;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"containerImg\":\"RegisterForm_containerImg__NqqMr\",\"containerTitle\":\"RegisterForm_containerTitle__yYLbM\",\"title\":\"RegisterForm_title__EvDyW\",\"text\":\"RegisterForm_text__cFC0o\",\"form\":\"RegisterForm_form__Tv43W\",\"containerForm\":\"RegisterForm_containerForm__OE-P+\",\"input\":\"RegisterForm_input__FsgBz\",\"containerIcon\":\"RegisterForm_containerIcon__sm6ah\",\"icon\":\"RegisterForm_icon__Xn6st\",\"button\":\"RegisterForm_button__B3hFq\",\"containerLink\":\"RegisterForm_containerLink__P82tD\",\"link\":\"RegisterForm_link__xu2eW\",\"span\":\"RegisterForm_span__L8jVb\",\"successInput\":\"RegisterForm_successInput__CuHET\",\"errorInput\":\"RegisterForm_errorInput__LuqSs\",\"successIcon\":\"RegisterForm_successIcon__J33Wc\",\"errorIcon\":\"RegisterForm_errorIcon__HFULE\",\"messageErr\":\"RegisterForm_messageErr__-+9wz\",\"messageSec\":\"RegisterForm_messageSec__nVTAy\"};","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport { toast } from 'react-toastify';\nimport { BgImageWrapper} from '../../components/BgImageWrapper/BgImageWrapper';\nimport { Icon } from '../../components/Icon/Icon';\nimport { logIn, registerUser} from '../../redux/Auth/operations';\nimport { signUpSchema, signInSchema } from '../../schemas/validationSchema';\nimport s from './RegisterForm.module.css';\n\nconst RegisterForm = ({ signUp }) => {\n  const [showPass, setShowPass] = useState(false);\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors, dirtyFields },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(signUp ? signUpSchema : signInSchema),\n  });\n  let navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const inputClass = fieldName => {\n    return classNames({\n      [`${s.input}`]: true,\n      [`${s.errorInput}`]: errors[fieldName]?.message && dirtyFields[fieldName],\n      [`${s.successInput}`]:\n        !errors[fieldName]?.message && dirtyFields[fieldName],\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message && dirtyFields[fieldName]) {\n      return <p className={s.messageErr}>{errors[fieldName]?.message}</p>;\n    }\n    return (\n      <p className={s.messageSec}>\n        {!errors[fieldName]?.message && dirtyFields[fieldName]\n          ? `${fieldName.charAt(0).toUpperCase()}${fieldName.slice(\n              1\n            )} is entered correct`\n          : ''}\n      </p>\n    );\n  };\n\n  const onSubmit = data => {\n    const { name, email, password } = data;\n\n    const userData = {\n      email,\n      password,\n    };\n\n    if (signUp) {\n      userData.name = name;\n    }\n\n    dispatch(signUp ? registerUser(userData) : logIn(userData))\n      .unwrap()\n      .then(userName => {\n        reset();\n        toast.success(\n          signUp\n            ? `Welcome, ${userName.name}!`\n            : `Welcome, ${userName.user.name}!`\n        );\n        signUp && navigate('/login');\n      })\n      .catch(error => {\n        if (error.response.status === 400) {\n          toast.error('Invalid data. Please check your input.');\n        } else if (error.response.status === 409) {\n          toast.error('User already exists. Please choose a different email.');\n        } else if (error.response.status === 403) {\n          toast.error('Invalid password.');\n        } else {\n          toast.error('An error occurred. Please try again later.');\n        }\n      });\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={s.containerImg}>\n        <BgImageWrapper />\n      </div>\n      <div>\n        <div className={s.containerTitle}>\n          <h2 className={s.title}>{signUp ? 'Sign Up' : 'Sign In'}</h2>\n          <p className={s.text}>\n            {signUp\n              ? 'Step into a world of hassle-free expense management! Your journey towards financial mastery begins here.'\n              : 'Welcome back to effortless expense tracking! Your financial dashboard awaits.'}\n          </p>\n        </div>\n        <div className={s.containerForm}>\n          <div className={s.container}>\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n              {signUp && (\n                <div className={s.containerIcon}>\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className={inputClass('name')}\n                    {...register('name')}\n                  />\n                  {!errors.name?.message && dirtyFields.name && (\n                    <Icon name=\"success\" size=\"16\" className={s.successIcon} />\n                  )}\n                  {errors.name?.message && dirtyFields.name && (\n                    <Icon name=\"error\" size=\"16\" className={s.errorIcon} />\n                  )}\n                  {renderMessage('name')}\n                </div>\n              )}\n\n              <div className={s.containerIcon}>\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  className={inputClass('email')}\n                  {...register('email')}\n                />\n                {!errors.email?.message && dirtyFields.email && (\n                  <Icon name=\"success\" size=\"16\" className={s.successIcon} />\n                )}\n                {errors.email?.message && dirtyFields.email && (\n                  <Icon name=\"error\" size=\"16\" className={s.errorIcon} />\n                )}\n                {renderMessage('email')}\n              </div>\n              <div>\n                <div className={s.containerIcon}>\n                  <input\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    className={inputClass('password')}\n                    {...register('password')}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPass(prev => !prev)}\n                  >\n                    {showPass ? (\n                      <Icon name=\"eye\" className={s.icon} size=\"16\" />\n                    ) : (\n                      <Icon name=\"eye-off\" className={s.icon} size=\"16\" />\n                    )}\n                  </button>\n                  {renderMessage('password')}\n                </div>\n              </div>\n              <div className={s.containerButton}>\n                <button type=\"submit\" className={s.button}>\n                  {signUp ? 'Sign Up' : 'Sign In'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className={s.containerLink}>\n          <NavLink className={s.link} to={signUp ? '/login' : '/register'}>\n            {signUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\n            <span className={s.span}>{signUp ? 'Sign In' : 'Sign Up'}</span>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;","// extracted by mini-css-extract-plugin\nexport default {\"mainBox\":\"CategoriesModal_mainBox__Zfe33\",\"box\":\"CategoriesModal_box__ZGfVW\",\"mainTitle\":\"CategoriesModal_mainTitle__TN5lI\",\"title\":\"CategoriesModal_title__7dUMC\",\"listWrapper\":\"CategoriesModal_listWrapper__U704O\",\"noobjects\":\"CategoriesModal_noobjects__DgZzo\",\"noobjectsP\":\"CategoriesModal_noobjectsP__Yh4Zh\",\"listItem\":\"CategoriesModal_listItem__zk9xA\",\"listSVG\":\"CategoriesModal_listSVG__eQgow\",\"buttonSVG\":\"CategoriesModal_buttonSVG__dGXre\",\"icon\":\"CategoriesModal_icon__dTPTH\",\"labelCategory\":\"CategoriesModal_labelCategory__L+-6L\",\"inputCategory\":\"CategoriesModal_inputCategory__BsVb4\",\"subbmitButton\":\"CategoriesModal_subbmitButton__Xilkt\",\"formStyle\":\"CategoriesModal_formStyle__TZCQq\",\"inputBox\":\"CategoriesModal_inputBox__ZojVH\"};","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addCategory, deleteCategory, editCategory } from '../../redux/Category/operations';\nimport { selectCategories } from '../../redux/Category/CategorySlice';\nimport { Icon } from '../../components/Icon/Icon';\nimport s from './CategoriesModal.module.css';\nimport { getTransactions } from '../../redux/Transaction/operations';\n\nexport const CategoriesModal = ({ type, transportCategory }) => {\n  const categories = useSelector(selectCategories);\n\n  const dispatch = useDispatch();\n  const ulRef = useRef(null);\n\n  const [categoryName, setCategoryName] = useState('');\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const [categoryId, setCategoryId] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const handleSubmitCategory = e => {\n    e.preventDefault();\n    if (categoryName.length > 16) {\n      toast.error(\n        'Category name length must be less than or equal to 16 characters long'\n      );\n      return;\n    }\n\n    if (isEditMode) {\n      dispatch(editCategory({ categoryName, categoryId }))\n        .unwrap()\n        .then(() => {\n          dispatch(getTransactions({ type }));\n          setIsEditMode(false);\n        })\n        .catch(error => toast.error('Error editing category'));\n    } else {\n      dispatch(addCategory({ type, categoryName }))\n        .unwrap()\n        .then(() => {\n          toast.success('New Category added successfully');\n\n          ulRef.current.scrollTo({\n            top: ulRef.current.scrollHeight,\n            behavior: 'smooth',\n          });\n        })\n        .catch(error => toast.error('Error adding category'));\n    }\n    setCategoryName('');\n  };\n\n  const handleInputChange = event => {\n    setCategoryName(event.target.value);\n  };\n\n  const handleChangeCategory = (id, categoryName) => {\n    setCategoryName(categoryName);\n    setCategoryId(id);\n\n    setIsEditMode(true);\n  };\n\n  const handleGetCategory = item => {\n    transportCategory(item);\n  };\n\n  const handleDeleteCategory = (id, type) => {\n    setIsEditMode(false);\n    setIsButtonDisabled(true);\n\n    dispatch(deleteCategory({ id, type }))\n      .unwrap()\n      .then(() => toast.success('Category deleted successfully'))\n      .catch(error => {\n        toast.error('Cannot delete category with existing transactions');\n      })\n      .finally(setIsButtonDisabled(false));\n  };\n  useEffect(() => {\n    if (!isEditMode) {\n      setCategoryName('');\n    }\n  }, [isEditMode]);\n\n  return (\n    <div className={s.mainBox}>\n      <div className={s.box}>\n        <h2 className={s.mainTitle}>\n          {type === 'expenses' ? 'Expenses' : 'Incomes'}\n        </h2>\n        <h3 className={s.title}>All Category</h3>\n\n        <ul className={`${s.listWrapper} scroll scrollB`} ref={ulRef}>\n          {categories[type].length === 0 ? (\n            <li className={s.noobjects}>\n              <p className={s.noobjectsP}>There are no categories</p>\n            </li>\n          ) : (\n            categories[type].map(item => (\n              <li className={s.listItem} key={item._id}>\n                <p>{item.categoryName}</p>\n\n                <ul className={s.listSVG}>\n                  <li className={s.listSVGitem}>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() => handleGetCategory(item)}\n                    >\n                      <Icon className={s.icon} name=\"check\" size=\"16\" />\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() =>\n                        handleChangeCategory(item._id, item.categoryName)\n                      }\n                    >\n                      <Icon className={s.icon} name=\"edit\" size=\"16\" />\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={s.buttonSVG}\n                      onClick={() => handleDeleteCategory(item._id, type)}\n                      disabled={isButtonDisabled}\n                    >\n                      <Icon className={s.icon} name=\"trash-bin\" size=\"16\" />\n                    </button>\n                  </li>\n                </ul>\n              </li>\n            ))\n          )}\n        </ul>\n      </div>\n\n      <form className={s.formStyle} onSubmit={handleSubmitCategory}>\n        <label className={s.labelCategory} htmlFor=\"categoryInput\">\n          {isEditMode ? 'Edit Category' : 'New Category'}\n        </label>\n        <div className={s.inputBox}>\n          <input\n            type=\"text\"\n            id=\"categoryInput\"\n            placeholder=\"Enter the text\"\n            className={s.inputCategory}\n            onChange={handleInputChange}\n            value={categoryName}\n          />\n\n          <button\n            className={s.subbmitButton}\n            type=\"submit\"\n            disabled={categoryName.length === 0}\n          >\n            {isEditMode ? 'Edit' : 'Add'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"TransactionForm_formWrapper__dJW4L\",\"transactionForm\":\"TransactionForm_transactionForm__sq0n7\",\"commentField\":\"TransactionForm_commentField__jz17L\",\"typeLabel\":\"TransactionForm_typeLabel__xEpZh\",\"transactionTypes\":\"TransactionForm_transactionTypes__+X4q-\",\"customRadioBtn\":\"TransactionForm_customRadioBtn__LqsSV\",\"radioLabel\":\"TransactionForm_radioLabel__G3oR-\",\"radioBtn\":\"TransactionForm_radioBtn__02koV\",\"customFields\":\"TransactionForm_customFields__ZH0up\",\"customField\":\"TransactionForm_customField__R60kZ\",\"datePicker\":\"TransactionForm_datePicker__zE4sc\",\"datepickerContainer\":\"TransactionForm_datepickerContainer__NhIVf\",\"react-datepicker__calendar\":\"TransactionForm_react-datepicker__calendar__OSKfp\",\"timeField\":\"TransactionForm_timeField__zhVdO\",\"categoryField\":\"TransactionForm_categoryField__rZdjV\",\"fieldWrapper\":\"TransactionForm_fieldWrapper__rFSik\",\"sumLabel\":\"TransactionForm_sumLabel__W2tJp\",\"iconDate\":\"TransactionForm_iconDate__ygxny\",\"iconTime\":\"TransactionForm_iconTime__F8-gz\",\"sumInput\":\"TransactionForm_sumInput__4jseR\",\"currency\":\"TransactionForm_currency__wL7Ly\",\"submitBtn\":\"TransactionForm_submitBtn__YfJho\",\"errorField\":\"TransactionForm_errorField__aGdMb\",\"messageError\":\"TransactionForm_messageError__0Ha4P\"};","import { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useModal } from 'hooks';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Icon, Modal } from 'components';\nimport { CategoriesModal } from '../CategoriesModal/CategoriesModal';\nimport { selectUser } from '../../redux/User/userSlice';\nimport { formatDate, formatTime } from '../../helpers'; // Correct import\nimport { selectTransactionsError } from '../../redux/Transaction/TransactionSlice';\nimport { transactionSchema } from '../../schemas/validationSchema';\nimport s from './TransactionForm.module.css';\n\nexport const TransactionForm = ({\n  transaction,\n  transactionsType,\n  onSubmitForm,\n  history,\n}) => {\n  const user = useSelector(selectUser);\n  const isError = useSelector(selectTransactionsError);\n  const { currency } = user;\n  const [categoryId, setCategoryId] = useState('');\n  const [isOpenModalTransaction, toggleModalTransaction] = useModal();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    setValue,\n    getValues,\n    control,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(transactionSchema),\n  });\n  const navigate = useNavigate();\n\n  const clearFieldCategory = useCallback(\n    type => {\n      setValue('category', '');\n      setCategoryId('');\n      navigate(`/transactions/${type}`);\n    },\n    [setValue, setCategoryId, navigate]\n  );\n\n  const setDefaultValues = useCallback(() => {\n    setValue('type', transactionsType);\n    setValue('date', formatDate(new Date()));\n    setValue('time', formatTime());\n    setValue('category', '');\n    setCategoryId('');\n    setValue('sum', '');\n    setValue('comment', '');\n    clearErrors();\n  }, [setValue, setCategoryId, transactionsType, clearErrors]);\n\n  useEffect(() => {\n    if (!transaction) {\n      setDefaultValues();\n    }\n\n    if (transaction) {\n      const { type, date, time, category, sum, comment } = transaction;\n\n      setCategoryId(category?._id);\n      setValue('type', type);\n      setValue('date', date);\n      setValue('time', time);\n      setValue('category', category.categoryName);\n      setValue('sum', sum);\n      setValue('comment', comment);\n    }\n  }, [transaction, setValue, setDefaultValues]);\n\n  const handleChangeCategory = item => {\n    setValue('category', item.categoryName, { shouldValidate: true });\n    setCategoryId(item._id);\n    toggleModalTransaction();\n  };\n\n  const handleChangeDate = date => {\n    const formattedDate = formatDate(date);\n    setValue('date', formattedDate, { shouldValidate: true });\n  };\n\n  const onSubmit = data => {\n    data.category = categoryId;\n\n    if (transaction) {\n      data._id = transaction._id;\n    }\n\n    onSubmitForm(data);\n\n    if (!isError && !transaction) {\n      reset();\n      setDefaultValues();\n    }\n  };\n\n  const fieldClasses = fieldName => {\n    return classNames({\n      [`${\n        s[fieldName !== 'date' ? `${fieldName + 'Field'}` : 'datePicker']\n      }`]: true,\n      [`${s.errorField}`]: errors[fieldName]?.message,\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message) {\n      return <p className={s.messageError}>{errors[fieldName]?.message}</p>;\n    }\n  };\n\n  const radioBtnExpenses = classNames({\n    [`${s.typeLabel}`]: true,\n    [`${s.radioLabel}`]:\n      transaction?.type === 'incomes' || history === 'incomes',\n  });\n\n  const radioBtnIncomes = classNames({\n    [`${s.typeLabel}`]: true,\n    [`${s.radioLabel}`]:\n      transaction?.type === 'expenses' || history === 'expenses',\n  });\n\n  return (\n    <div>\n      <div className={s.formWrapper}>\n        <form className={s.transactionForm} onSubmit={handleSubmit(onSubmit)}>\n          <div className={s.transactionTypes}>\n            <label className={radioBtnExpenses}>\n              <input\n                className={s.radioBtn}\n                type=\"radio\"\n                name=\"type\"\n                value=\"expenses\"\n                {...register('type')}\n                disabled={\n                  transaction?.type === 'incomes' || history === 'incomes'\n                }\n                onChange={() => clearFieldCategory('expenses')}\n              />\n              <span className={s.customRadioBtn}></span>\n              Expense\n            </label>\n            <label className={radioBtnIncomes}>\n              <input\n                className={s.radioBtn}\n                type=\"radio\"\n                name=\"type\"\n                value=\"incomes\"\n                {...register('type')}\n                disabled={\n                  transaction?.type === 'expenses' || history === 'expenses'\n                }\n                onChange={() => clearFieldCategory('incomes')}\n              />\n              <span className={s.customRadioBtn}></span>\n              Income\n            </label>\n          </div>\n          <div className={s.customFields}>\n            <label className={s.customField}>\n              Date\n              <Controller\n                control={control}\n                name=\"date\"\n                render={({ field }) => (\n                  <div className=\"datepickerContainer\">\n                    <DatePicker\n                      className={fieldClasses('date')}\n                      showPopperArrow={false}\n                      maxDate={new Date()}\n                      selected={field.value}\n                      placeholderText=\"mm/dd/yyyy\"\n                      onChange={date => {\n                        field.onChange(date);\n                        handleChangeDate(date);\n                      }}\n                      calendarClassName=\"fixed-height-calendar\"\n                    />\n                  </div>\n                )}\n              />\n              <Icon name=\"calendar\" className={s.iconDate} size=\"16\" />\n              {renderMessage('date')}\n            </label>\n            <label className={s.customField}>\n              Time\n              <input\n                className={fieldClasses('time')}\n                type=\"time\"\n                name=\"time\"\n                {...register('time')}\n              />\n              <Icon name=\"clock\" className={s.iconTime} size=\"16\" />\n              {renderMessage('time')}\n            </label>\n          </div>\n          <div className={s.fieldWrapper}>\n            <label>Category</label>\n            <input\n              className={fieldClasses('category')}\n              type=\"text\"\n              name=\"category\"\n              placeholder=\"Different\"\n              autoComplete=\"off\"\n              {...register('category')}\n              required\n              readOnly\n              onClick={toggleModalTransaction}\n            />\n            {renderMessage('category')}\n          </div>\n          <div>\n            <label className={s.sumLabel}>\n              Sum\n              <input\n                className={fieldClasses('sum')}\n                type=\"number\"\n                name=\"sum\"\n                placeholder=\"Enter the sum\"\n                autoComplete=\"off\"\n                {...register('sum')}\n              />\n              <span className={s.currency}>{currency?.toUpperCase()}</span>\n              {renderMessage('sum')}\n            </label>\n          </div>\n          <div className={s.fieldWrapper}>\n            <label>Comment</label>\n            <textarea\n              className={fieldClasses('comment')}\n              name=\"comment\"\n              placeholder=\"Enter the text\"\n              {...register('comment')}\n            />\n            {renderMessage('comment')}\n          </div>\n          <button\n            className={s.submitBtn}\n            type=\"submit\"\n            disabled={Object.entries(errors).length}\n          >\n            {transaction ? 'Save' : 'Add'}\n          </button>\n        </form>\n      </div>\n      {isOpenModalTransaction && (\n        <Modal toggleModal={toggleModalTransaction}>\n          <CategoriesModal\n            transportCategory={handleChangeCategory}\n            type={getValues('type')}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n","// helpers/calculateCategories.js\nimport { fetchColors } from './fetchColors'; // Ensure this function is properly implemented\nimport { currentMonth } from './currentMonth'; // Fixed typo\n\nexport function calculateCategories(data, total) {\n  if (!data.length) return [];\n\n  const categorySum = {};\n  const { firstDayOfMonth, lastDayOfMonth } = currentMonth(); // Fixed typo\n\n  // Filter transactions for the current month\n  const currentMonthTransactions = data.filter(\n    item => item.date >= firstDayOfMonth && item.date <= lastDayOfMonth\n  );\n\n  if (!currentMonthTransactions.length) return [];\n\n  // Sum up values for each category\n  currentMonthTransactions.forEach(transaction => {\n    const { category, sum } = transaction;\n    if (categorySum[category.categoryName]) {\n      categorySum[category.categoryName] += sum;\n    } else {\n      categorySum[category.categoryName] = sum;\n    }\n  });\n\n  const categoriesData = [];\n\n  // Create categories data with percentages\n  Object.entries(categorySum).forEach(([key, value]) => {\n    const percent = ((value / total) * 100).toFixed(1); // Ensure 1 decimal place for precision\n    categoriesData.push({ name: key, value: parseFloat(percent) }); // Convert to float for consistency\n  });\n\n  // Ensure percentages sum up to 100%\n  const sumPercentages = categoriesData.reduce(\n    (total, item) => total + item.value,\n    0\n  );\n\n  const sortedCategories = categoriesData.sort((a, b) => b.value - a.value);\n\n  if (sumPercentages !== 100) {\n    const diff = 100 - sumPercentages;\n\n    if (sortedCategories.length) {\n      const lastIndex = sortedCategories.length - 1;\n      const lastCategory = sortedCategories[lastIndex];\n\n      if (lastCategory.value > 1) {\n        lastCategory.value = parseFloat((lastCategory.value + diff).toFixed(1));\n      } else {\n        lastCategory.value = 0.1; // Ensure a minimum value for visibility\n      }\n    }\n  }\n\n  // Ensure fetchColors is properly implemented\n  return fetchColors(sortedCategories);\n}\n","import { endOfMonth, format, startOfMonth } from 'date-fns';\n\nexport function currentMonth() {\n  const currentDate = new Date();\n  const firstDayOfMonth = format(startOfMonth(currentDate), 'yyyy-MM-dd');\n  const lastDayOfMonth = format(endOfMonth(currentDate), 'yyyy-MM-dd');\n\n  return { firstDayOfMonth, lastDayOfMonth };\n}","export function fetchColors(data) {\n\n    const colors = [\n      '#008000 ',\n      '#32CD32',\n      '#00FA9A',\n      '#98FB98',\n      '#228B22',\n      '#2E8B57',\n      '#3CB371',\n      '#00FF7F',\n      '#66CDAA',\n      '#8FBC8F',\n      '#2F4F4F',\n      '#aabaaa',\n      '#dbf0db',\n      '#777f77',\n      '#5a5e5a',\n    ];\n  \n    data.map((item, index) => (item.color = colors[index]));\n  \n    return data;\n  }","// extracted by mini-css-extract-plugin\nexport default {\"chartContainer\":\"TransactionsChart_chartContainer__Dm1QE\",\"title\":\"TransactionsChart_title__HJ11O\",\"statsWrapper\":\"TransactionsChart_statsWrapper__HcGTQ\",\"pieChartWrapper\":\"TransactionsChart_pieChartWrapper__g1yw6\",\"chartDescr\":\"TransactionsChart_chartDescr__65Wcs\",\"list\":\"TransactionsChart_list__X+rU0\",\"listItem\":\"TransactionsChart_listItem__JJwTm\",\"wrapperMarker\":\"TransactionsChart_wrapperMarker__Zw1W2\",\"itemDescr\":\"TransactionsChart_itemDescr__nrjb-\",\"itemSpan\":\"TransactionsChart_itemSpan__Hm8D6\",\"warningWrapper\":\"TransactionsChart_warningWrapper__levm-\",\"warningTitle\":\"TransactionsChart_warningTitle__1Dkxd\",\"imgNoData\":\"TransactionsChart_imgNoData__wc4-e\",\"imgNoTransactions\":\"TransactionsChart_imgNoTransactions__+BFMx\"};","import { useSelector } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { Chart } from '../PieChart/PieChart';\nimport { calculateCategories } from '../../helpers/calculateCategories'; // Ensure this function is correctly implemented\nimport { selectTransactions, selectTransactionsError } from '../../redux/Transaction/TransactionSlice';\nimport { selectUser } from '../../redux/User/userSlice';\nimport s from './TransactionsChart.module.css';\n\nexport const TransactionsChart = ({ transactionsType }) => {\n  const [categoriesData, setCategoriesData] = useState(null);\n\n  const { totalIncomes, totalExpenses } = useSelector(selectUser);\n  const error = useSelector(selectTransactionsError);\n  const data = useSelector(selectTransactions);\n\n  const totalRef = useRef(\n    transactionsType === 'Incomes' ? totalIncomes : totalExpenses\n  );\n\n  useEffect(() => {\n    totalRef.current =\n      transactionsType === 'Incomes' ? totalIncomes : totalExpenses;\n  }, [totalIncomes, totalExpenses, transactionsType]);\n\n  useEffect(() => {\n    if (data === null) return;\n\n    // Calculate categories based on the data and total value\n    setCategoriesData(calculateCategories(data, totalRef.current));\n  }, [data, transactionsType]);\n\n  if (error) {\n    return (\n      <div className={s.warningWrapper}>\n        <h2 className={s.warningTitle}>\n          Sorry, something went wrong. Please try again...\n        </h2>\n        <p className={s.errorMessage}>An error occurred while fetching the data.</p>\n      </div>\n    );\n  }\n\n  if (data === null || categoriesData === null) return null;\n\n  return !categoriesData.length ? (\n    <div className={s.warningWrapper}>\n      <h2 className={s.warningTitle}>\n        You don't have any {transactionsType.toLowerCase()} this month.\n      </h2>\n      <p className={s.noDataMessage}>No data available for this period.</p>\n    </div>\n  ) : (\n    <div className={s.chartContainer}>\n      <h3 className={s.title}>{transactionsType} Categories</h3>\n      <div className={s.statsWrapper}>\n        <div className={s.pieChartWrapper}>\n          <Chart data={categoriesData} />\n          <p className={s.chartDescr}>100%</p>\n        </div>\n        <ul className={`${s.list} scroll scrollA`}>\n          {categoriesData.map((item, index) => (\n            <li className={s.listItem} key={index}>\n              <div\n                className={s.wrapperMarker}\n                style={{ backgroundColor: item.color }}\n              ></div>\n              <p className={s.itemDescr}>{item.name}</p>\n              <p className={s.itemSpan}>{item.value}%</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"TransactionsTotal_link__2Zd-o\",\"iconContainer\":\"TransactionsTotal_iconContainer__hBCHo\",\"icon\":\"TransactionsTotal_icon__ibCfE\",\"list\":\"TransactionsTotal_list__No+i2\",\"listItem\":\"TransactionsTotal_listItem__Wuqp-\",\"amountTitle\":\"TransactionsTotal_amountTitle__xm2gd\",\"amountDescr\":\"TransactionsTotal_amountDescr__ck70l\"};","import { Link, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Icon } from '../Icon/Icon'; // Update the import path if necessary\nimport { selectUser } from '../../redux/User/userSlice';\nimport { retrieveCurrency, determinePath } from '../../helpers';\n\nimport s from './TransactionsTotal.module.css';\n\n// Ensure these helper functions are correctly implemented in your helpers module\nconst getCurrencyChar = (currency) => retrieveCurrency(currency); \nconst getPath = (location) => determinePath(location);\n\nexport const TransactionsTotal = ({\n  totalAllExpenses = null,\n  totalAllIncomes = null,\n}) => {\n  const [path, setPath] = useState({});\n  const location = useLocation();\n\n  const { totalIncomes, totalExpenses, currency } = useSelector(selectUser);\n  const currencyChar = getCurrencyChar(currency);\n\n  useEffect(() => {\n    setPath(getPath(location));\n  }, [location]);\n\n  return (\n    <div className={s.wrapper}>\n      <ul className={s.list}>\n        <li className={s.listItem}>\n          <Link className={s.link} to={path.incomes}>\n            <div className={s.iconContainer}>\n              <Icon className={s.icon} name=\"arrow-up\" size=\"18\" />\n            </div>\n          </Link>\n          <div>\n            <h3 className={s.amountTitle}>Total Income</h3>\n            <p className={s.amountDescr}>\n              {currencyChar}\n              {totalAllIncomes !== null ? totalAllIncomes : totalIncomes}\n            </p>\n          </div>\n        </li>\n        <li className={s.listItem}>\n          <Link className={s.link} to={path.expenses}>\n            <div className={s.iconContainer}>\n              <Icon className={s.icon} name=\"arrow-down\" size=\"18\" />\n            </div>\n          </Link>\n          <div>\n            <h3 className={s.amountTitle}>Total Expense</h3>\n            <p className={s.amountDescr}>\n              {currencyChar}\n              {totalAllExpenses !== null ? totalAllExpenses : totalExpenses}\n            </p>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","export function determinePath(location) {\n    const path = {};\n    if (\n      location.pathname === '/transactions/incomes' ||\n      location.pathname === '/transactions/expenses'\n    ) {\n      path.expenses = '/transactions/expenses';\n      path.incomes = '/transactions/incomes';\n    } else {\n      path.expenses = '/transactions/history/expenses';\n      path.incomes = '/transactions/history/incomes';\n    }\n    return path;\n  }","export function retrieveCurrency(currency) {\n    switch (currency) {\n      case 'uah':\n        return '₱';\n      case 'usd':\n        return '$';\n      case 'eur':\n        return '€';\n      default:\n        break;\n    }\n  }","export const formatDate = date => {\n    if (!date) return;\n  \n    if (typeof date === 'string') {\n      const parts = date.split('-');\n      const year = parseInt(parts[0], 10);\n      const month = parseInt(parts[1], 10) - 1;\n      const day = parseInt(parts[2], 10);\n  \n      return new Date(year, month, day);\n    }\n  \n    const year = date.getFullYear();\n    let month = (date.getMonth() + 1).toString().padStart(2, '0');\n    let day = date.getDate().toString().padStart(2, '0');\n  \n    return `${year}-${month}-${day}`;\n  };","\nexport const formatTime = () => {\n    const currentDate = new Date();\n    const hours = String(currentDate.getHours()).padStart(2, '0');\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n  \n    return `${hours}:${minutes}`;\n  };\n","import * as yup from 'yup';\n\nexport const signUpSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .min(2, 'Min length must be more than 2 chars')\n    .max(32, 'Max length must be less than 32 chars'),\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const transactionSchema = yup.object({\n  date: yup.string().required('Date is required'),\n  time: yup.string().required('Time is required'),\n  category: yup.string().required('Category is required'),\n  sum: yup\n    .string()\n    .matches(/^[1-9][0-9]*$/, 'Sum must be greater than 0')\n    .test('max', 'Sum must be less than or equal to 1000000', value => {\n      if (!value) return true;\n      const parsedValue = parseInt(value, 10);\n      return !isNaN(parsedValue) && parsedValue <= 1000000;\n    })\n    .required('Sum is required'),\n  comment: yup\n    .string()\n    .required('Comment is required')\n    .min(3, 'Comment length must be at least 3 characters long'),\n});"],"names":["BgImageWrapper","randomSum","setRandomSum","useState","randomPercent","setRandomPercent","useEffect","Math","random","toFixed","_jsx","className","s","children","_jsxs","Icon","name","size","Chart","_ref","data","chartData","useMemo","PieChart","width","height","Pie","dataKey","startAngle","endAngle","cy","innerRadius","outerRadius","paddingAngle","cornerRadius","fill","stroke","map","entry","index","Cell","style","outline","color","_errors$name","_errors$name2","_errors$email","_errors$email2","signUp","showPass","setShowPass","register","reset","handleSubmit","formState","errors","dirtyFields","useForm","mode","resolver","yupResolver","signUpSchema","signInSchema","navigate","useNavigate","dispatch","useDispatch","inputClass","fieldName","_errors$fieldName","_errors$fieldName2","classNames","message","renderMessage","_errors$fieldName3","_errors$fieldName5","_errors$fieldName4","charAt","toUpperCase","slice","onSubmit","email","password","userData","registerUser","logIn","unwrap","then","userName","toast","user","catch","error","response","status","type","placeholder","onClick","prev","NavLink","to","CategoriesModal","transportCategory","categories","useSelector","selectCategories","ulRef","useRef","categoryName","setCategoryName","isButtonDisabled","setIsButtonDisabled","categoryId","setCategoryId","isEditMode","setIsEditMode","ref","length","item","handleGetCategory","handleChangeCategory","id","_id","handleDeleteCategory","deleteCategory","finally","disabled","e","preventDefault","editCategory","getTransactions","addCategory","current","scrollTo","top","scrollHeight","behavior","htmlFor","onChange","event","target","value","TransactionForm","transaction","transactionsType","onSubmitForm","history","selectUser","isError","selectTransactionsError","currency","isOpenModalTransaction","toggleModalTransaction","useModal","setValue","getValues","control","clearErrors","transactionSchema","clearFieldCategory","useCallback","setDefaultValues","formatDate","Date","formatTime","date","time","category","sum","comment","fieldClasses","radioBtnExpenses","radioBtnIncomes","Controller","render","_ref2","field","DatePicker","showPopperArrow","maxDate","selected","placeholderText","formattedDate","shouldValidate","handleChangeDate","calendarClassName","autoComplete","required","readOnly","Object","entries","Modal","toggleModal","calculateCategories","total","categorySum","firstDayOfMonth","lastDayOfMonth","currentDate","format","startOfMonth","endOfMonth","currentMonth","currentMonthTransactions","filter","forEach","categoriesData","key","percent","push","parseFloat","sumPercentages","reduce","sortedCategories","sort","a","b","diff","lastCategory","colors","fetchColors","TransactionsChart","setCategoriesData","totalIncomes","totalExpenses","selectTransactions","totalRef","backgroundColor","toLowerCase","TransactionsTotal","totalAllExpenses","totalAllIncomes","path","setPath","location","useLocation","currencyChar","retrieveCurrency","getCurrencyChar","determinePath","getPath","Link","incomes","expenses","pathname","parts","split","year","parseInt","month","day","getFullYear","getMonth","toString","padStart","getDate","String","getHours","getMinutes","yup","min","max","shape","matches","test","parsedValue","isNaN"],"sourceRoot":""}