{"version":3,"file":"static/js/424.3b71526c.chunk.js","mappings":"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","sources":["helpers/generateRandomNumber.js","webpack://ExpenseTracker/./src/components/BgImageWrapper/BgImageWrapper.module.css?8cad","components/BgImageWrapper/BgImageWrapper.jsx","webpack://ExpenseTracker/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://ExpenseTracker/./src/pages/RegisterPage.module.css?8287","pages/RegisterPage.jsx","schemas/validationSchema.js"],"sourcesContent":["export const randomNumber = () => {\n    const randomNumber = Math.random() * (999 - 100) + 100;\n    return randomNumber.toFixed(3);\n  };\n  export const randomPercentage = () => Math.random() * (100 - 1) + 1;","// extracted by mini-css-extract-plugin\nexport default {\"containerImg\":\"BgImageWrapper_containerImg__2XDcO\",\"containerSvg\":\"BgImageWrapper_containerSvg__wChVN\",\"icon\":\"BgImageWrapper_icon__Y-tXs\",\"containerText\":\"BgImageWrapper_containerText__dogbM\",\"containerBalance\":\"BgImageWrapper_containerBalance__+jgEq\",\"text\":\"BgImageWrapper_text__fXYZe\",\"balance\":\"BgImageWrapper_balance__6EXKP\",\"containerPercent\":\"BgImageWrapper_containerPercent__ovNOW\",\"percent\":\"BgImageWrapper_percent__8LxOt\"};","import React, { useState, useEffect } from 'react';\nimport { Icon } from '../Icon/Icon';\nimport { randomNumber, randomPercentage } from '../../helpers/generateRandomNumber';\nimport s from './BgImageWrapper.module.css';\n\nexport const BgImageWrapper = () => {\n  const [randomSum, setRandomSum] = useState(0);\n  const [randomPercent, setRandomPercent] = useState(0);\n\n  useEffect(() => {\n    setRandomSum(randomNumber());\n    setRandomPercent(randomPercentage());\n  }, []);\n\n  return (\n    <div className={s.containerImg}>\n      <div className={s.containerText}>\n        <div className={s.containerSvg}>\n          <Icon name=\"arrow-up\" className={s.icon} size=\"18\" />\n        </div>\n        <div className={s.containerBalance}>\n          <p className={s.text}>Your balance</p>\n          <p className={s.balance}>{`$${randomSum}`}</p>\n        </div>\n        <div className={s.containerPercent}>\n          <p className={s.percent}>{`+${randomPercent.toFixed(2)}%`}</p>\n        </div>\n        <p className={s.dynamicText}></p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"containerImg\":\"RegisterForm_containerImg__NqqMr\",\"containerTitle\":\"RegisterForm_containerTitle__yYLbM\",\"title\":\"RegisterForm_title__EvDyW\",\"text\":\"RegisterForm_text__cFC0o\",\"form\":\"RegisterForm_form__Tv43W\",\"containerForm\":\"RegisterForm_containerForm__OE-P+\",\"input\":\"RegisterForm_input__FsgBz\",\"containerIcon\":\"RegisterForm_containerIcon__sm6ah\",\"icon\":\"RegisterForm_icon__Xn6st\",\"button\":\"RegisterForm_button__B3hFq\",\"containerLink\":\"RegisterForm_containerLink__P82tD\",\"link\":\"RegisterForm_link__xu2eW\",\"span\":\"RegisterForm_span__L8jVb\",\"successInput\":\"RegisterForm_successInput__CuHET\",\"errorInput\":\"RegisterForm_errorInput__LuqSs\",\"successIcon\":\"RegisterForm_successIcon__J33Wc\",\"errorIcon\":\"RegisterForm_errorIcon__HFULE\",\"messageErr\":\"RegisterForm_messageErr__-+9wz\",\"messageSec\":\"RegisterForm_messageSec__nVTAy\"};","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classNames from 'classnames';\nimport { toast } from 'react-toastify';\nimport { BgImageWrapper} from '../../components/BgImageWrapper/BgImageWrapper';\nimport { Icon } from '../../components/Icon/Icon';\nimport { logIn, registerUser} from '../../redux/Auth/operations';\nimport { signUpSchema, signInSchema } from '../../schemas/validationSchema';\nimport s from './RegisterForm.module.css';\n\nconst RegisterForm = ({ signUp }) => {\n  const [showPass, setShowPass] = useState(false);\n  const {\n    register,\n    reset,\n    handleSubmit,\n    formState: { errors, dirtyFields },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(signUp ? signUpSchema : signInSchema),\n  });\n  let navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const inputClass = fieldName => {\n    return classNames({\n      [`${s.input}`]: true,\n      [`${s.errorInput}`]: errors[fieldName]?.message && dirtyFields[fieldName],\n      [`${s.successInput}`]:\n        !errors[fieldName]?.message && dirtyFields[fieldName],\n    });\n  };\n\n  const renderMessage = fieldName => {\n    if (errors[fieldName]?.message && dirtyFields[fieldName]) {\n      return <p className={s.messageErr}>{errors[fieldName]?.message}</p>;\n    }\n    return (\n      <p className={s.messageSec}>\n        {!errors[fieldName]?.message && dirtyFields[fieldName]\n          ? `${fieldName.charAt(0).toUpperCase()}${fieldName.slice(\n              1\n            )} is entered correct`\n          : ''}\n      </p>\n    );\n  };\n\n  const onSubmit = data => {\n    const { name, email, password } = data;\n\n    const userData = {\n      email,\n      password,\n    };\n\n    if (signUp) {\n      userData.name = name;\n    }\n\n    dispatch(signUp ? registerUser(userData) : logIn(userData))\n      .unwrap()\n      .then(userName => {\n        reset();\n        toast.success(\n          signUp\n            ? `Welcome, ${userName.name}!`\n            : `Welcome, ${userName.user.name}!`\n        );\n        signUp && navigate('/login');\n      })\n      .catch(error => {\n        if (error.response.status === 400) {\n          toast.error('Invalid data. Please check your input.');\n        } else if (error.response.status === 409) {\n          toast.error('User already exists. Please choose a different email.');\n        } else if (error.response.status === 403) {\n          toast.error('Invalid password.');\n        } else {\n          toast.error('An error occurred. Please try again later.');\n        }\n      });\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={s.containerImg}>\n        <BgImageWrapper />\n      </div>\n      <div>\n        <div className={s.containerTitle}>\n          <h2 className={s.title}>{signUp ? 'Sign Up' : 'Sign In'}</h2>\n          <p className={s.text}>\n            {signUp\n              ? 'Step into a world of hassle-free expense management! Your journey towards financial mastery begins here.'\n              : 'Welcome back to effortless expense tracking! Your financial dashboard awaits.'}\n          </p>\n        </div>\n        <div className={s.containerForm}>\n          <div className={s.container}>\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\n              {signUp && (\n                <div className={s.containerIcon}>\n                  <input\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className={inputClass('name')}\n                    {...register('name')}\n                  />\n                  {!errors.name?.message && dirtyFields.name && (\n                    <Icon name=\"success\" size=\"16\" className={s.successIcon} />\n                  )}\n                  {errors.name?.message && dirtyFields.name && (\n                    <Icon name=\"error\" size=\"16\" className={s.errorIcon} />\n                  )}\n                  {renderMessage('name')}\n                </div>\n              )}\n\n              <div className={s.containerIcon}>\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  className={inputClass('email')}\n                  {...register('email')}\n                />\n                {!errors.email?.message && dirtyFields.email && (\n                  <Icon name=\"success\" size=\"16\" className={s.successIcon} />\n                )}\n                {errors.email?.message && dirtyFields.email && (\n                  <Icon name=\"error\" size=\"16\" className={s.errorIcon} />\n                )}\n                {renderMessage('email')}\n              </div>\n              <div>\n                <div className={s.containerIcon}>\n                  <input\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                    className={inputClass('password')}\n                    {...register('password')}\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => setShowPass(prev => !prev)}\n                  >\n                    {showPass ? (\n                      <Icon name=\"eye\" className={s.icon} size=\"16\" />\n                    ) : (\n                      <Icon name=\"eye-off\" className={s.icon} size=\"16\" />\n                    )}\n                  </button>\n                  {renderMessage('password')}\n                </div>\n              </div>\n              <div className={s.containerButton}>\n                <button type=\"submit\" className={s.button}>\n                  {signUp ? 'Sign Up' : 'Sign In'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className={s.containerLink}>\n          <NavLink className={s.link} to={signUp ? '/login' : '/register'}>\n            {signUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\n            <span className={s.span}>{signUp ? 'Sign In' : 'Sign Up'}</span>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterPage_container__EEsvL\"};","import RegisterForm from '../components/RegisterForm/RegisterForm';\nimport s from './RegisterPage.module.css';\n\nconst Register = () => {\n  return (\n    <div className={s.container}>\n      <RegisterForm signUp />\n    </div>\n  );\n};\n\nexport default Register;","import * as yup from 'yup';\n\nexport const signUpSchema = yup.object({\n  name: yup\n    .string()\n    .required('Name is required')\n    .min(2, 'Min length must be more than 2 chars')\n    .max(32, 'Max length must be less than 32 chars'),\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const signInSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Enter a valid Email')\n    .required('Email is required')\n    .max(64, 'Max length must be less than 64 chars'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(8, 'Min length must be more than 8 chars')\n    .max(64, 'Max length must be less than 64 chars'),\n});\n\nexport const transactionSchema = yup.object({\n  date: yup.string().required('Date is required'),\n  time: yup.string().required('Time is required'),\n  category: yup.string().required('Category is required'),\n  sum: yup\n    .string()\n    .matches(/^[1-9][0-9]*$/, 'Sum must be greater than 0')\n    .test('max', 'Sum must be less than or equal to 1000000', value => {\n      if (!value) return true;\n      const parsedValue = parseInt(value, 10);\n      return !isNaN(parsedValue) && parsedValue <= 1000000;\n    })\n    .required('Sum is required'),\n  comment: yup\n    .string()\n    .required('Comment is required')\n    .min(3, 'Comment length must be at least 3 characters long'),\n});"],"names":["BgImageWrapper","randomSum","setRandomSum","useState","randomPercent","setRandomPercent","useEffect","Math","random","toFixed","_jsx","className","s","children","_jsxs","Icon","name","size","_ref","_errors$name","_errors$name2","_errors$email","_errors$email2","signUp","showPass","setShowPass","register","reset","handleSubmit","formState","errors","dirtyFields","useForm","mode","resolver","yupResolver","signUpSchema","signInSchema","navigate","useNavigate","dispatch","useDispatch","inputClass","fieldName","_errors$fieldName","_errors$fieldName2","classNames","message","renderMessage","_errors$fieldName3","_errors$fieldName5","_errors$fieldName4","charAt","toUpperCase","slice","onSubmit","data","email","password","userData","registerUser","logIn","unwrap","then","userName","toast","user","catch","error","response","status","type","placeholder","onClick","prev","NavLink","to","Register","RegisterForm","yup","required","min","max","shape","transactionSchema","date","time","category","sum","matches","test","value","parsedValue","parseInt","isNaN","comment"],"sourceRoot":""}